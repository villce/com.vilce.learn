server.port=8002

spring.application.name=spring-boot-rabbitmq

rabbitmq.host=localhost
rabbitmq.port=5672
rabbitmq.username=admin
rabbitmq.password=admin
rabbitmq.publisher-confirms=true
rabbitmq.virtual-host=/

# kafka配置
# kafka服务器IP和端口号
spring.kafka.bootstrap-servers=172.30.71.96:9092
# producer
# 如果该值大于0时，表示启用重试失败的发送次数
spring.kafka.producer.retries=0
# 每当多个记录被发送到同一分区时，生产者将尝试记录一起批量处理为更少的请求、默认值为16384（单位字节）
spring.kafka.producer.batch-size=16384
# 生产者可用于缓冲等待发送到服务器的记录的内存总字节数，默认为33554432
spring.kafka.producer.buffer-memory=33554432
# key的Serializer类，实现类实现了接口org.apache.kafka.common.serialization.Serializer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
# value的Serializer类，实现类实现了接口org.apache.kafka.common.serialization.Serializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
# consumer
# 用于标识此使用者所属的使用者组的唯一字符串
spring.kafka.consumer.group-id=test-consumer-group
# 当kafka中没有初始偏移量或者服务器上不再存在当前偏移量时该怎么办，默认值为latest，表示自动将偏移重置为最新的偏移量
# 可选值为latest、earliest、none
spring.kafka.consumer.auto-offset-reset=earliest
# 消费者的偏移量将在后台定期提交，默认值为true
spring.kafka.consumer.enable-auto-commit=true
# 如果'enable-auto-commit'为`true`，则消费者偏移自动提交给kafka的频率（以毫秒为单位），默认值为5000
spring.kafka.consumer.auto-commit-interval=100
# 密钥的反序列化器类，实现类实现了接口
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
# 值的反序列化
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer


